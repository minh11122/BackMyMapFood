const express = require("express");
const router = express.Router();
const cartController = require("../controller/cart.controller");

// üõí Th√™m m√≥n v√†o gi·ªè h√†ng
router.post("/cart/add", cartController.addToCart);

// üß∫ L·∫•y gi·ªè h√†ng theo shop (ch·ªâ c√°c m√≥n t·ª´ 1 shop)
router.get("/cart/user/:userId/shop/:shopId", cartController.getCartByShop);

// ‚ùå X√≥a 1 m√≥n kh·ªèi gi·ªè
router.delete("/cart/:cartItemId", async (req, res) => {
  const CartItem = require("../models/cartItem.model");
  try {
    const { cartItemId } = req.params;
    const item = await CartItem.findById(cartItemId);
    if (!item)
      return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y m√≥n trong gi·ªè" });

    item.status = "REMOVED";
    await item.save();
    res.status(200).json({ success: true, message: "ƒê√£ x√≥a kh·ªèi gi·ªè h√†ng" });
  } catch (err) {
    console.error("Remove cart error:", err);
    res.status(500).json({ success: false, message: "Server error" });
  }
});

// ‚ôªÔ∏è C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
router.put("/cart/:cartItemId", async (req, res) => {
  const CartItem = require("../models/cartItem.model");
  try {
    const { cartItemId } = req.params;
    const { quantity, note } = req.body;

    const item = await CartItem.findById(cartItemId);
    if (!item)
      return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y m√≥n trong gi·ªè" });

    if (quantity <= 0)
      return res.status(400).json({ success: false, message: "S·ªë l∆∞·ª£ng ph·∫£i l·ªõn h∆°n 0" });

    item.quantity = quantity;
    if (note !== undefined) item.note = note;
    await item.save();

    res.status(200).json({ success: true, message: "ƒê√£ c·∫≠p nh·∫≠t gi·ªè h√†ng", data: item });
  } catch (err) {
    console.error("Update cart error:", err);
    res.status(500).json({ success: false, message: "Server error" });
  }
});

router.get("/cart/user/:userId", cartController.getCartByUser)

router.get("/cart/vouchers/:shopId", cartController.getVouchersByShop);


module.exports = router;
